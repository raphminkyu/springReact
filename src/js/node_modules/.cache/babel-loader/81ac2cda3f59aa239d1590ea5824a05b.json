{"ast":null,"code":"import _defineProperty from \"/Users/raphael0925/git/springReact/src/js/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raphael0925/git/springReact/src/js/src/forms/addStudentForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Tag } from 'antd';\nimport { addNewStudent } from '../client';\nconst inputButtonMargin = {\n  marginBottom: '10px'\n};\n\nconst tagStyle = _objectSpread({\n  backgroundColor: '#f50',\n  color: 'white'\n}, inputButtonMargin);\n\nclass AddStudentForm extends Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        gender: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.firstName) {\n          errors.firstName = \"First Name Required\";\n        }\n\n        if (!values.lastName) {\n          errors.lastName = \"Last Name Required\";\n        }\n\n        if (!values.email) {\n          errors.email = 'Email Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid Email address';\n        }\n\n        if (!values.gender) {\n          errors.gender = \"Gender Required\";\n        } else if (!['MALE', 'male', 'FEMALE', 'female'].includes(values.gender)) {\n          errors.gender = \"Gender must be (MALE, male, FEMALE, female)\";\n        }\n\n        return errors;\n      },\n      onSubmit: (student, {\n        setSubmitting\n      }) => {\n        addNewStudent(student).then(() => {\n          this.props.onSuccess();\n          setSubmitting(false);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, ({\n      values,\n      errors,\n      touched,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      submitForm,\n      isValid\n      /* and other goodies */\n\n    }) => React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: inputButtonMargin,\n      name: \"firstName\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.firstName,\n      placeHolder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), errors.firstName && touched.firstName && React.createElement(Tag, {\n      style: tagStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, errors.firstName), React.createElement(Input, {\n      style: inputButtonMargin,\n      name: \"lastName\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.lastName,\n      placeHolder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), errors.lastName && touched.lastName && React.createElement(Tag, {\n      style: tagStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, errors.lastName), React.createElement(Input, {\n      style: inputButtonMargin,\n      name: \"email\",\n      type: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      placeHolder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), errors.email && touched.email && React.createElement(Tag, {\n      style: tagStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, errors.email), React.createElement(Input, {\n      style: inputButtonMargin,\n      name: \"gender\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.gender,\n      placeHolder: \"Gender; Male or Female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), errors.gender && touched.gender && React.createElement(Tag, {\n      style: tagStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, errors.gender), React.createElement(Button, {\n      onClick: () => submitForm(),\n      type: \"submit\",\n      disabled: isSubmitting | (touched && !isValid),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default AddStudentForm;","map":{"version":3,"sources":["/Users/raphael0925/git/springReact/src/js/src/forms/addStudentForm.js"],"names":["React","Component","Formik","Input","Button","Tag","addNewStudent","inputButtonMargin","marginBottom","tagStyle","backgroundColor","color","AddStudentForm","render","firstName","lastName","email","gender","values","errors","test","includes","student","setSubmitting","then","props","onSuccess","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Tag } from 'antd';\nimport { addNewStudent } from '../client';\n\nconst inputButtonMargin = {marginBottom: '10px'};\nconst tagStyle = {backgroundColor: '#f50', color: 'white', ...inputButtonMargin};\n\nclass AddStudentForm extends Component{\n    render(){\n        return (\n            <Formik\n            initialValues={{ firstName: '', lastName: '', email: '', gender: '' }}\n            validate={values => {\n                const errors = {};\n\n                if(!values.firstName){\n                    errors.firstName = \"First Name Required\"\n\n                }\n\n                if(!values.lastName){\n                    errors.lastName = \"Last Name Required\"\n\n                }\n\n                if (!values.email) {\n                    errors.email = 'Email Required';\n                } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                    errors.email = 'Invalid Email address';\n                }\n\n                if(!values.gender){\n                    errors.gender = \"Gender Required\"\n                }else if(!['MALE', 'male', 'FEMALE', 'female'].includes(values.gender)){\n                    errors.gender = \"Gender must be (MALE, male, FEMALE, female)\";\n                }\n                return errors;\n            }}\n            onSubmit={(student, { setSubmitting }) => {\n              \n                addNewStudent(student).then(() => {\n                   this.props.onSuccess();\n                    setSubmitting(false);\n                })\n               \n         \n            }}\n            >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                submitForm,\n                isValid\n                /* and other goodies */\n            }) => (\n                <form onSubmit={handleSubmit}>\n                <Input\n                    style = {inputButtonMargin}\n                    name=\"firstName\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.firstName}\n                    placeHolder = 'First Name' \n                />\n                {errors.firstName && touched.firstName && <Tag style ={tagStyle}>{errors.firstName}</Tag>}\n                 <Input\n                    style = {inputButtonMargin}\n                    name=\"lastName\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.lastName}\n                    placeHolder = 'Last Name' \n                />\n                {errors.lastName && touched.lastName && <Tag style ={tagStyle}>{errors.lastName}</Tag>}\n                <Input\n                    style = {inputButtonMargin}\n                    name=\"email\"\n                    type='email'\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                    placeHolder = 'Email' \n                />\n                {errors.email && touched.email && <Tag style ={tagStyle}>{errors.email}</Tag>}\n                <Input\n                    style = {inputButtonMargin}\n                    name=\"gender\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.gender}\n                    placeHolder = 'Gender; Male or Female'\n                />\n                {errors.gender && touched.gender && <Tag style ={tagStyle}>{errors.gender}</Tag>}\n                \n                <Button onClick ={() => submitForm()} \n                        type = \"submit\"\n                        disabled={isSubmitting | (touched && !isValid)}>\n                \n                    Submit\n                </Button>\n                </form>\n            )}\n            </Formik>\n        \n        )\n    }\n}\n\nexport default AddStudentForm;"]},"metadata":{},"sourceType":"module"}