{"ast":null,"code":"var _jsxFileName = \"/Users/raphael0925/git/springReact/src/js/src/App.js\";\nimport React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport Footer from './Footer.js';\nimport { getAllStudents } from './client';\nimport AddStudentForm from './forms/addStudentForm';\nimport { Table, Avatar, Spin, Icon, Modal } from 'antd';\nimport { errorNotification } from './Notification';\n\nconst getIndicatorIcon = () => React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      students: [],\n      isFetching: false,\n      isAddStudentModalVisible: false\n    };\n\n    this.openAddStudentModal = () => this.setState({\n      isAddStudentModalVisible: true\n    });\n\n    this.closeAddStudentModal = () => this.setState({\n      isAddStudentModalVisible: false\n    });\n\n    this.fetchStudents = () => {\n      this.setState({\n        isFetching: true\n      });\n      getAllStudents().then(res => res.json().then(students => {\n        console.log(students);\n        this.setState({\n          students,\n          isFetching: false\n        });\n      })).catch(error => {\n        const message = error.error.message;\n        const description = error.error.error;\n        errorNotification(message, description);\n        this.setState({\n          isFetching: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  render() {\n    const _this$state = this.state,\n          students = _this$state.students,\n          isFetching = _this$state.isFetching,\n          isAddStudentModalVisible = _this$state.isAddStudentModalVisible;\n\n    if (isFetching) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Spin, {\n        indicator: getIndicatorIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n\n    if (students && students.length) {\n      const columns = [{\n        title: '',\n        key: 'avatar',\n        //touse custom component, use render\n        render: (text, student) => React.createElement(Avatar, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"\".concat(student.firstName.charAt(0).toUpperCase()).concat(student.lastName.charAt(0).toUpperCase()))\n      }, {\n        title: 'Student ID',\n        dataIndex: 'studentId',\n        key: 'studentId'\n      }, {\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender'\n      }];\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Table, {\n        style: {\n          marginBottom: '100px'\n        },\n        dataSource: students,\n        columns: columns,\n        pagination: false,\n        rowKey: \"studentId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        title: \"Add New Student\",\n        visible: isAddStudentModalVisible,\n        onOk: this.closeAddStudentModal,\n        onCancel: this.closeAddStudentModal,\n        width: 1000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(AddStudentForm, {\n        onSuccess: () => {\n          this.closeAddStudentModal();\n          this.fetchStudents();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(Footer, {\n        numberOfStudents: students.length,\n        handleAddStudentClickEvent: this.openAddStudentModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"No Students Found\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/raphael0925/git/springReact/src/js/src/App.js"],"names":["React","Component","Container","Footer","getAllStudents","AddStudentForm","Table","Avatar","Spin","Icon","Modal","errorNotification","getIndicatorIcon","fontSize","App","state","students","isFetching","isAddStudentModalVisible","openAddStudentModal","setState","closeAddStudentModal","fetchStudents","then","res","json","console","log","catch","error","message","description","componentDidMount","render","length","columns","title","key","text","student","firstName","charAt","toUpperCase","lastName","dataIndex","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport Footer from './Footer.js';\nimport { getAllStudents } from './client';\nimport AddStudentForm from './forms/addStudentForm'\nimport { \n  Table, Avatar, Spin, Icon, Modal\n} from 'antd';\nimport { errorNotification } from './Notification';\n\n\nconst getIndicatorIcon = () =>  <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass App extends Component{\n\n  state = {\n    students: [],\n    isFetching: false,\n    isAddStudentModalVisible:false\n  }\n  componentDidMount(){\n    this.fetchStudents();\n  }\n\n  openAddStudentModal = ()=> this.setState({isAddStudentModalVisible: true});\n\n  closeAddStudentModal = ()=> this.setState({isAddStudentModalVisible: false})\n\n  fetchStudents = () => {\n    this.setState({\n      isFetching:true\n    });\n    getAllStudents()\n    .then(res => res.json()\n    .then(students => {\n      console.log(students);\n      this.setState({\n        students,\n        isFetching:false\n      })\n    })).catch(error => {\n      const message = (error.error.message);\n      const description = error.error.error;\n      errorNotification(message, description);\n      this.setState({\n        isFetching: false\n      });\n    });\n  }\n\n  render(){\n    \n\n    const { students , isFetching, isAddStudentModalVisible } = this.state;\n    \n    \n    if(isFetching){\n      return (\n        <Container>\n          <Spin indicator={getIndicatorIcon}/>\n        </Container>\n      );\n    }\n\n    \n\n   if(students && students.length ){\n    \n    const columns = [\n      {\n        title: '',\n        key:'avatar',\n        //touse custom component, use render\n        render: (text ,student) =>(\n          <Avatar size ='large'>\n            {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\n          </Avatar>\n        )\n      },\n      {\n        title: 'Student ID',\n        dataIndex: 'studentId',\n        key:'studentId'\n      },\n      {\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key:'firstName'\n      },\n      {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key:'lastName'\n      },\n      {\n        title: 'Email',\n        dataIndex: 'email',\n        key:'email'\n      },\n      {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key:'gender'\n      }\n\n    ];\n     \n    return (\n      <Container>\n        <Table \n          style ={{marginBottom: '100px'}}\n          dataSource = {students} \n          columns = {columns} \n          pagination = {false}\n          rowKey = 'studentId' />\n        <Modal \n          title = \"Add New Student\"\n          visible = {isAddStudentModalVisible}\n          onOk ={this.closeAddStudentModal}\n          onCancel = {this.closeAddStudentModal}\n          width = {1000}>\n           \n            <AddStudentForm \n              onSuccess = {() => {this.closeAddStudentModal(); \n              this.fetchStudents();\n            }}\n            />\n\n        \n\n        </Modal>\n        <Footer numberOfStudents = {students.length} handleAddStudentClickEvent = {this.openAddStudentModal}/>\n      </Container>\n    )\n   }\n\n    return <h1>No Students Found</h1>\n  }\n \n   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}