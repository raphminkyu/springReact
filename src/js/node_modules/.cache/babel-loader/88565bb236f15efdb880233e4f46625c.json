{"ast":null,"code":"import _defineProperty from \"/Users/raphael0925/git/springReact/src/js/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/raphael0925/git/springReact/src/js/src/forms/addStudentForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Tag } from 'antd';\nimport { addNewStudent } from '../client';\nconst inputButtonMargin = {\n  marginBottom: '10px'\n};\n\nconst tagStyle = _objectSpread({\n  backgroundColor: '#f50',\n  color: 'white'\n}, inputButtonMargin);\n\nconst AddStudentForm = props => React.createElement(Formik, {\n  initialValues: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    gender: ''\n  },\n  validate: values => {\n    const errors = {};\n\n    if (!values.firstName) {\n      errors.firstName = \"First Name Required\";\n    }\n\n    if (!values.lastName) {\n      errors.lastName = \"Last Name Required\";\n    }\n\n    if (!values.email) {\n      errors.email = 'Email Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n      errors.email = 'Invalid Email address';\n    }\n\n    if (!values.gender) {\n      errors.gender = \"Gender Required\";\n    } else if (!['MALE', 'male', 'FEMALE', 'female'].includes(values.gender)) {\n      errors.gender = \"Gender must be (MALE, male, FEMALE, female)\";\n    }\n\n    return errors;\n  },\n  onSubmit: (student, {\n    setSubmitting\n  }) => {\n    addNewStudent(student).then(() => {\n      props.props.onSuccess();\n      setSubmitting(false);\n    });\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, ({\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  handleSubmit,\n  isSubmitting,\n  submitForm,\n  isValid\n  /* and other goodies */\n\n}) => React.createElement(\"form\", {\n  onSubmit: handleSubmit,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, React.createElement(Input, {\n  style: inputButtonMargin,\n  name: \"firstName\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.firstName,\n  placeHolder: \"First Name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), errors.firstName && touched.firstName && React.createElement(Tag, {\n  style: tagStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, errors.firstName), React.createElement(Input, {\n  style: inputButtonMargin,\n  name: \"lastName\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.lastName,\n  placeHolder: \"Last Name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), errors.lastName && touched.lastName && React.createElement(Tag, {\n  style: tagStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, errors.lastName), React.createElement(Input, {\n  style: inputButtonMargin,\n  name: \"email\",\n  type: \"email\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.email,\n  placeHolder: \"Email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}), errors.email && touched.email && React.createElement(Tag, {\n  style: tagStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, errors.email), React.createElement(Input, {\n  style: inputButtonMargin,\n  name: \"gender\",\n  onChange: handleChange,\n  onBlur: handleBlur,\n  value: values.gender,\n  placeHolder: \"Gender; Male or Female\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}), errors.gender && touched.gender && React.createElement(Tag, {\n  style: tagStyle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, errors.gender), React.createElement(Button, {\n  onClick: () => submitForm(),\n  type: \"submit\",\n  disabled: isSubmitting | (touched && !isValid),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, \"Submit\")));\n\nexport default AddStudentForm;","map":{"version":3,"sources":["/Users/raphael0925/git/springReact/src/js/src/forms/addStudentForm.js"],"names":["React","Formik","Input","Button","Tag","addNewStudent","inputButtonMargin","marginBottom","tagStyle","backgroundColor","color","AddStudentForm","props","firstName","lastName","email","gender","values","errors","test","includes","student","setSubmitting","then","onSuccess","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Tag } from 'antd';\nimport { addNewStudent } from '../client';\n\nconst inputButtonMargin = {marginBottom: '10px'};\nconst tagStyle = {backgroundColor: '#f50', color: 'white', ...inputButtonMargin};\n\nconst AddStudentForm = (props) => \n    (\n            <Formik\n            initialValues={{ firstName: '', lastName: '', email: '', gender: '' }}\n            validate={values => {\n                const errors = {};\n\n                if(!values.firstName){\n                    errors.firstName = \"First Name Required\"\n\n                }\n\n                if(!values.lastName){\n                    errors.lastName = \"Last Name Required\"\n\n                }\n\n                if (!values.email) {\n                    errors.email = 'Email Required';\n                } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                    errors.email = 'Invalid Email address';\n                }\n\n                if(!values.gender){\n                    errors.gender = \"Gender Required\"\n                }else if(!['MALE', 'male', 'FEMALE', 'female'].includes(values.gender)){\n                    errors.gender = \"Gender must be (MALE, male, FEMALE, female)\";\n                }\n                return errors;\n            }}\n            onSubmit={(student, { setSubmitting }) => {\n              \n                addNewStudent(student).then(() => {\n                   props.props.onSuccess();\n                    setSubmitting(false);\n                })\n               \n         \n            }}\n            >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                submitForm,\n                isValid\n                /* and other goodies */\n            }) => (\n                <form onSubmit={handleSubmit}>\n                <Input\n                    style = {inputButtonMargin}\n                    name=\"firstName\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.firstName}\n                    placeHolder = 'First Name' \n                />\n                {errors.firstName && touched.firstName && <Tag style ={tagStyle}>{errors.firstName}</Tag>}\n                 <Input\n                    style = {inputButtonMargin}\n                    name=\"lastName\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.lastName}\n                    placeHolder = 'Last Name' \n                />\n                {errors.lastName && touched.lastName && <Tag style ={tagStyle}>{errors.lastName}</Tag>}\n                <Input\n                    style = {inputButtonMargin}\n                    name=\"email\"\n                    type='email'\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.email}\n                    placeHolder = 'Email' \n                />\n                {errors.email && touched.email && <Tag style ={tagStyle}>{errors.email}</Tag>}\n                <Input\n                    style = {inputButtonMargin}\n                    name=\"gender\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.gender}\n                    placeHolder = 'Gender; Male or Female'\n                />\n                {errors.gender && touched.gender && <Tag style ={tagStyle}>{errors.gender}</Tag>}\n                \n                <Button onClick ={() => submitForm()} \n                        type = \"submit\"\n                        disabled={isSubmitting | (touched && !isValid)}>\n                \n                    Submit\n                </Button>\n                </form>\n            )}\n            </Formik>\n        \n    );\n    \n\n\nexport default AddStudentForm;"]},"metadata":{},"sourceType":"module"}