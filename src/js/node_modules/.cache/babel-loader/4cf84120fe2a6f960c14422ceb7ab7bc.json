{"ast":null,"code":"var _jsxFileName = \"/Users/raphael0925/git/springReact/src/js/src/App.js\";\nimport React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport { Table, Avatar, Spin, Icon } from 'antd';\n\nconst getIndicatorIcon = () => React.createElement(Icon, {\n  type: \"loading\",\n  style: {\n    fontSize: 24\n  },\n  spin: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n});\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      students: [],\n      isFetching: false\n    };\n\n    this.fetchStudents = () => {\n      this.setState({\n        isFetching: true\n      });\n      getAllStudents().then(res => res.json().then(students => {\n        console.log(students);\n        this.setState({\n          students,\n          isFetching: false\n        });\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  render() {\n    const _this$state = this.state,\n          students = _this$state.students,\n          isFetching = _this$state.isFetching;\n\n    if (isFetching) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Spin, {\n        indicator: getIndicatorIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n\n    if (students && students.length) {\n      const columns = [{\n        title: '',\n        key: 'avatar',\n        //touse custom component, use render\n        render: (text, student) => React.createElement(Avatar, {\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"\".concat(student.firstName.charAt(0).toUpperCase()).concat(student.lastName.charAt(0).toUpperCase()))\n      }, {\n        title: 'Student ID',\n        dataIndex: 'studentId',\n        key: 'studentId'\n      }, {\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }];\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Table, {\n        dataSource: students,\n        columns: columns,\n        pagination: false,\n        rowKey: \"studentId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"No Students Found\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/raphael0925/git/springReact/src/js/src/App.js"],"names":["React","Component","Container","getAllStudents","Table","Avatar","Spin","Icon","getIndicatorIcon","fontSize","App","state","students","isFetching","fetchStudents","setState","then","res","json","console","log","componentDidMount","render","length","columns","title","key","text","student","firstName","charAt","toUpperCase","lastName","dataIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Container from './Container';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport { \n  Table, Avatar, Spin, Icon\n} from 'antd';\n\n\nconst getIndicatorIcon = () =>  <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass App extends Component{\n\n  state = {\n    students: [],\n    isFetching: false\n  }\n  componentDidMount(){\n    this.fetchStudents();\n  }\n\n  fetchStudents = () => {\n    this.setState({\n      isFetching:true\n    });\n    getAllStudents()\n    .then(res => res.json()\n    .then(students => {\n      console.log(students);\n      this.setState({\n        students,\n        isFetching:false\n      })\n    }));\n  }\n\n  render(){\n    \n\n    const { students , isFetching } = this.state;\n    \n    \n    if(isFetching){\n      return (\n        <Container>\n          <Spin indicator={getIndicatorIcon}/>\n        </Container>\n      );\n    }\n\n    \n\n   if(students && students.length ){\n    \n    const columns = [\n      {\n        title: '',\n        key:'avatar',\n        //touse custom component, use render\n        render: (text ,student) =>(\n          <Avatar size ='large'>\n            {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\n          </Avatar>\n        )\n      },\n      {\n        title: 'Student ID',\n        dataIndex: 'studentId',\n        key:'studentId'\n      },\n      {\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key:'firstName'\n      },\n      {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key:'lastName'\n      }\n\n    ];\n     \n    return (\n      <Container>\n        <Table \n          dataSource = {students} \n          columns = {columns} \n          pagination = {false}\n          rowKey = 'studentId' />\n      </Container>\n    )\n   }\n\n    return <h1>No Students Found</h1>\n  }\n \n   \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}